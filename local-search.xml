<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/12/09/hello-world/"/>
    <url>/2022/12/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C Langues</title>
    <link href="/2022/11/29/C-Langues/"/>
    <url>/2022/11/29/C-Langues/</url>
    
    <content type="html"><![CDATA[<ul><li><h3 id="Center-point"><a href="#Center-point" class="headerlink" title="Center point"></a>Center point</h3><p>本文旨以应用为导向，通过最简单的方式了解C语言的一些基础知识，以及其使用方法。</p><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul><li><p>C语言是一种通用的、面向过程的高级计算机程序设计语言。1972年，为了移植和开发Unix系统，丹尼斯里奇在贝尔实验室设计开发了C语言。当前的国际标准为C18，之前还有C17，C99等。</p></li><li><p>Linux，Unix等一些操作系统，C编译器，以及Unix等所有的应用程序都是使用C语言进行编写的。C语言自从面试至今，40多年来，仍然被广泛使用，在面向底层的一些开发中，具有无可替代的优势。主要的优点有：易于学习，结构化语言，能够产生高效率的程序，可以处理底层的活动，在多种平台上可移植。</p></li><li><p>是为了编写Unix系统而被发明的</p></li><li><p>是以B为基础</p></li><li><p>其标准在1988年由ANSI制定</p></li><li><p>Unix系统内核完全使用C重写</p></li><li><p>是使用最为广泛的系统程序设计语言</p></li><li><p>Linux和数据库等都是使用C语言进行编写的</p></li></ul><h4 id="使用C的原因？"><a href="#使用C的原因？" class="headerlink" title="使用C的原因？"></a>使用C的原因？</h4><ul><li>主要是用于系统开发，其代码编译速度与汇编语言编写的代码运行速度几乎差不多，所以其有显著的优势。主要运用的方面有：操作系统，语言编译器，汇编器，文本编辑器，打印机，网络驱动器，现代程序，数据库，语言解释器，实体工具</li></ul><h4 id="C的编译环境"><a href="#C的编译环境" class="headerlink" title="C的编译环境"></a>C的编译环境</h4><ul><li>本文主要是基于Windows进行学习使用，所以仅介绍Windows环境。</li><li>主要的编译器有Visual Studio 和 CLion编辑器，本人主要使用的后者进行程序的编写。</li></ul><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><h4 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h4><ul><li>在C语言程序中，分号是语句结束的标志，每个完整的语句都必须使用分号结束，其表明了一个逻辑实体的结束。</li></ul><h4 id="注释："><a href="#注释：" class="headerlink" title="注释："></a>注释：</h4><ul><li><p>C语言主要由两种不同的注释方式</p></li><li><div class="code-wrapper"><pre><code class="hljs">//单行注释，不可换行/*可单行可多行，中间可换行*/</code></pre></div></li></ul><h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><ul><li>C语言的标识符主要是用来表示变量、函数、或者任何其他用户自定义的名称，主要由数字，字母和下划线组成，且必须要由字母或下划线开头。同时区分大小写。</li></ul><h4 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h4><table><thead><tr><th align="center">关键字</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">auto</td><td align="center">声明自动变量</td></tr><tr><td align="center">break</td><td align="center">跳出当前循环</td></tr><tr><td align="center">case</td><td align="center">开关分支语句</td></tr><tr><td align="center">char</td><td align="center">声明字符型变量或者函数返回值类型</td></tr><tr><td align="center">const</td><td align="center">定义常量，如果一个变量被其修饰，那么这个变量就不能再改变</td></tr><tr><td align="center">continue</td><td align="center">跳出当前循环，开始下一轮循环</td></tr><tr><td align="center">default</td><td align="center">开关语句分支中的其他分支</td></tr><tr><td align="center">do</td><td align="center">循环语句的循环体</td></tr><tr><td align="center">double</td><td align="center">声明双精度浮点型变量或函数返回值类型</td></tr><tr><td align="center">else</td><td align="center">条件语句否定分支（与if连用）</td></tr><tr><td align="center">enum</td><td align="center">声明枚举类型</td></tr><tr><td align="center">extern</td><td align="center">声明变量或函数是在其他文件或文本的其他位置定义</td></tr><tr><td align="center">float</td><td align="center">声明浮点型变量或函数的返回值类型</td></tr><tr><td align="center">for</td><td align="center">一种循环语句</td></tr><tr><td align="center">goto</td><td align="center">无条件跳转语句</td></tr><tr><td align="center">if</td><td align="center">条件语句</td></tr><tr><td align="center">int</td><td align="center">声明整型变量或函数的返回值类型</td></tr><tr><td align="center">long</td><td align="center">声明长整型变量或函数返回值类型</td></tr><tr><td align="center">register</td><td align="center">声明寄存器变量</td></tr><tr><td align="center">return</td><td align="center">子程序返回语句，可以带参数也可以不带参数</td></tr><tr><td align="center">short</td><td align="center">声明短整型变量或函数</td></tr><tr><td align="center">signed</td><td align="center">声明有符号类型变量或函数</td></tr><tr><td align="center">sizeof</td><td align="center">计算数据类型或变量长度（即所占字节数）</td></tr><tr><td align="center">static</td><td align="center">声明静态变量</td></tr><tr><td align="center">struct</td><td align="center">声明结构体类型</td></tr><tr><td align="center">switch</td><td align="center">用于开关语句</td></tr><tr><td align="center">typedef</td><td align="center">用以给数据类型取别名</td></tr><tr><td align="center">unsigned</td><td align="center">声明无符号类型变量或函数</td></tr><tr><td align="center">union</td><td align="center">声明共用体类型</td></tr><tr><td align="center">void</td><td align="center">声明函数无返回值或无参数，声明无类型指针</td></tr><tr><td align="center">volatile</td><td align="center">说明变量在程序执行中可被隐含地改变</td></tr><tr><td align="center">while</td><td align="center">循环语句的循环条件</td></tr></tbody></table><h5 id="C99新增"><a href="#C99新增" class="headerlink" title="C99新增"></a>C99新增</h5><table><thead><tr><th align="center">_Bool</th><th>_Complex</th><th>_Imaginary</th><th>inline</th><th>restrict</th></tr></thead></table><h5 id="C11-新增关键字"><a href="#C11-新增关键字" class="headerlink" title="C11 新增关键字"></a>C11 新增关键字</h5><table><thead><tr><th align="center"><strong>_Alignas</strong></th><th align="center"><strong>_Alignof</strong></th><th align="center"><strong>_Atomic</strong></th><th align="center"><strong>_Generic</strong></th></tr></thead><tbody><tr><td align="center"><strong>_Noreturn</strong></td><td align="center"><strong>_Static_assert</strong></td><td align="center"><strong>_Thread_local</strong></td><td align="center"></td></tr></tbody></table></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>C Langues</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
